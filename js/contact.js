/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/contact.js":
/*!***************************!*\
  !*** ./src/js/contact.js ***!
  \***************************/
/***/ (() => {

eval("let delta, num = 0, move, timer;\nconst mql = window.matchMedia(\"screen and (max-width: 1024px)\");\n\n$(document).on(\"touchstart\",function(){\n  var scrollTop = $(window).scrollTop();\n\n  if( mql.matches ){\n    if( scrollTop > $('.submit').offset().top - 100){\n      $('.burger, .logo, .mail').addClass('black')\n    }else{\n      $('.burger, .logo, .mail').removeClass('black')\n    }\n  }\n});\n\n\n$(window).on('mousewheel DOMMouseScroll',function(e){\n  if( mql.matches ) return;\n    delta = e.originalEvent.wheelDelta || e.originalEvent.detail * -40;\n    clearTimeout(move);\n    move = setTimeout(function(){\n      if(delta < 0){\n          if(num < 2) num++; //down\n      }else{\n          if(num > 0) num--;   //up\n      }\n      ani();\n\n      if(num > 0){\n          $('body').css({ 'background-color' : '#111111'})\n          $('.burger, .logo, .mail').addClass('black')\n      }else{\n          $('body').css({ 'background-color' : 'transparent'})\n          $('.burger, .logo, .mail').removeClass('black')\n      }\n\n      \n      clearTimeout(timer);\n\n      if( num !== 2 ){\n          $('.timebar span').removeClass('active');\n          $('.timebar span').css({ 'transition' : '0s','transition-delay' : '.5s'})\n      }else{\n          $('.timebar span').addClass('active')\n          $('.timebar span').css({ 'transition' : '8s','transition-delay' : '0s'})\n          timer = setTimeout(function(){\n              location.href = '../about.html'\n          },8000);\n      }\n        \n    },100);\n});\n\nfunction ani(){\n    $('html,body').animate({ \n        scrollTop : $(window).height() * num \n    });\n};\n\nfunction init(){\n    setTimeout(function(){\n        $('html,body').scrollTop(0);\n        $('body').css({ 'background-color' : 'transparent'})\n        $('.burger, .logo, .mail').removeClass('black')\n        num=0;\n    },100)\n}\ninit();\n\n\n\n// 폼 제출 알림 메시지\n(function() {\n    // get all data in form and return object\n    function getFormData(form) {\n      var elements = form.elements;\n      var honeypot;\n  \n      var fields = Object.keys(elements).filter(function(k) {\n        if (elements[k].name === \"honeypot\") {\n          honeypot = elements[k].value;\n          return false;\n        }\n        return true;\n      }).map(function(k) {\n        if(elements[k].name !== undefined) {\n          return elements[k].name;\n        // special case for Edge's html collection\n        }else if(elements[k].length > 0){\n          return elements[k].item(0).name;\n        }\n      }).filter(function(item, pos, self) {\n        return self.indexOf(item) == pos && item;\n      });\n  \n      var formData = {};\n      fields.forEach(function(name){\n        var element = elements[name];\n        \n        // singular form elements just have one value\n        formData[name] = element.value;\n  \n        // when our element has multiple items, get their values\n        if (element.length) {\n          var data = [];\n          for (var i = 0; i < element.length; i++) {\n            var item = element.item(i);\n            if (item.checked || item.selected) {\n              data.push(item.value);\n            }\n          }\n          formData[name] = data.join(', ');\n        }\n      });\n  \n      // add form-specific values into the data\n      formData.formDataNameOrder = JSON.stringify(fields);\n      formData.formGoogleSheetName = form.dataset.sheet || \"responses\"; // default sheet name\n      formData.formGoogleSendEmail\n        = form.dataset.email || \"\"; // no email by default\n  \n      return {data: formData, honeypot: honeypot};\n    }\n  \n    function handleFormSubmit(event) {  // handles form submit without any jquery\n      event.preventDefault();           // we are submitting via xhr below\n      var form = event.target;\n      var formData = getFormData(form);\n      var data = formData.data;\n  \n      // If a honeypot field is filled, assume it was done so by a spam bot.\n      if (formData.honeypot) {\n        return false;\n      }\n  \n      disableAllButtons(form);\n      var url = form.action;\n      var xhr = new XMLHttpRequest();\n      xhr.open('POST', url);\n      // xhr.withCredentials = true;\n      xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n      xhr.onreadystatechange = function() {\n          if (xhr.readyState === 4 && xhr.status === 200) {\n            form.reset();\n            var formElements = form.querySelector(\".form-elements\")\n            if (formElements) {\n              formElements.style.display = \"none\"; // hide form\n            }\n            var thankYouMessage = form.querySelector(\".thankyou_message\");\n            if (thankYouMessage) {\n                alert( $('.thankyou_message').text() )\n            }\n          }\n      };\n      // url encode form data for sending as post data\n      var encoded = Object.keys(data).map(function(k) {\n          return encodeURIComponent(k) + \"=\" + encodeURIComponent(data[k]);\n      }).join('&');\n      xhr.send(encoded);\n    }\n    \n    function loaded() {\n      // bind to the submit event of our form\n      var forms = document.querySelectorAll(\"form.gform\");\n      for (var i = 0; i < forms.length; i++) {\n        forms[i].addEventListener(\"submit\", handleFormSubmit, false);\n      }\n    };\n    document.addEventListener(\"DOMContentLoaded\", loaded, false);\n  \n    function disableAllButtons(form) {\n      var buttons = form.querySelectorAll(\"button\");\n      for (var i = 0; i < buttons.length; i++) {\n        buttons[i].disabled = true;\n      }\n    }\n  })();\n\n\n//# sourceURL=webpack://kwons0pack/./src/js/contact.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/contact.js"]();
/******/ 	
/******/ })()
;